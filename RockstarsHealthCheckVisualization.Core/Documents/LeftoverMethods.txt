Leftover methods



List<Project> projects = new List<Project>(GetProjectsFromManagers(managers));
List<Employee> employees = new List<Employee>(GetEmployeesFromProjects(projects));
List<FilledOutQuestionnaire> filledOutQuestions = new List<FilledOutQuestionnaire>(GetFilledOutQuestionnairesFromProjects(projects));


    private List<Project> GetProjectsFromManagers(List<Manager> managers)
    {
        List<Project> projects = new List<Project>();
        foreach (Manager manager in managers)
        {
            foreach (var project in manager.projects)
            {
                projects.Add(project);
            }
        }
        return projects;
    }

    private List<Employee> GetEmployeesFromProjects(List<Project> projects)
    {
        List<Employee> employees = new List<Employee>();
        foreach (var project in projects)
        {
            foreach (var employee in project.employees)
            {
                employees.Add(employee);
            }
        }
        return employees;
    }

    private List<FilledOutQuestionnaire> GetFilledOutQuestionnairesFromProjects(List<Project> projects)
    {
        List<FilledOutQuestionnaire> filledOutQuestionnaires = new List<FilledOutQuestionnaire>();
        foreach (var project in projects)
        {
            foreach (var filledOutQuestionnaire in project.filledOutQuestionnaires)
            {
                filledOutQuestionnaires.Add(filledOutQuestionnaire);
            }
        }
        return filledOutQuestionnaires;
    }

    private DataCollection MakeDataCollection(List<Manager> managers)
    {
        this.dataCollection = new DataCollection(this.managers);
        foreach (var manager in this.managers)
        {
            dataCollection.AddAndUpdateFromManager(manager);
        }
        return dataCollection;
    }




    internal List<string> GetNamesMockDataSets()
        {
            List<string> namesMockDataSets = new List<string>();
            foreach (var mockDataSet in this.mockDataSets)
            {
                namesMockDataSets.Add(mockDataSet.nameMockDataSet);
            }
            return namesMockDataSets;
        }


